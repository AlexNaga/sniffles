AWSTemplateFormatVersion: '2010-09-09'
Description: Sniffles Slack module

Parameters:
  SnsTopic:
    Type: String
    Description: SNS topic ARN to subscribe to
  SlackParameterStorePath:
    Type: String
    Description: SSM Parameter Store path to Slack, without leading slash
    Default: "sniffles/default/slack"
  SlackParameterStoreKey:
    Type: String
    Description: KMS key used to encrypt Parameter Store Slack values, e.g. arn:aws:kms:${AWS::Region}:${AWS::AccountId}:alias/ssm
  SlackChannel:
    Type: String
    Description: Slack channel to forward logs to
  S3Bucket:
    Type: String
    Description: Where the slack lambda is stored
  S3Key:
    Type: String
    Description: Where the slack lambda is located

Resources:
  Lambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref S3Bucket
        S3Key: !Ref S3Key
      Environment:
        Variables:
          SlackParameterStorePath: !Sub "/${SlackParameterStorePath}"
          SlackChannel: !Ref SlackChannel
      Handler: index.handler
      MemorySize: 128
      Timeout: 30
      Role: !Sub ${LambdaExecutionRole.Arn}
      FunctionName: !Sub "${AWS::StackName}"
      Description: !Sub "${AWS::StackName}"
      Runtime: nodejs12.x
  LambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${AWS::StackName}"
      RetentionInDays: 30
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: MyPermissions
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'ssm:GetParameter'
                  - 'ssm:GetParameters'
                  - 'ssm:GetParametersByPath'
                Resource:
                  - !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${SlackParameterStorePath}'
              - Effect: Allow
                Action:
                  - 'kms:Decrypt'
                Resource:
                  - !Ref SlackParameterStoreKey
  LambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:invokeFunction
      FunctionName: !Ref Lambda
      Principal: sns.amazonaws.com
      SourceArn: !Ref SnsTopic
  LambdaSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: lambda
      Endpoint: !Sub "${Lambda.Arn}"
      TopicArn: !Ref SnsTopic

Outputs:
  TemplateID:
    Description: Template reference name
    Value: 'slack'
  Region:
    Description: 'Region where stack is deployed'
    Value: !Sub '${AWS::Region}'
  StackName:
    Description: 'Stack name.'
    Value: !Sub '${AWS::StackName}'
